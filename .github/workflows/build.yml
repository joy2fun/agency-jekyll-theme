name: build image & deploy

on:
  push:
    branches: ['master']
    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1  # Specify Ruby version compatible with your Jekyll setup

      - name: Install Jekyll
        run: gem install jekyll

      - name: Build Jekyll site
        run: jekyll build

      - name: Build Docker image
        run: |
          echo "FROM nginx:alpine" > Dockerfile
          echo "COPY ./_site /usr/share/nginx/html" >> Dockerfile

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Login to aliyun
        uses: aliyun/acr-login@v1
        with:
          login-server: 'registry.cn-shanghai.aliyuncs.com'
          username: '${{ secrets.REGISTRY_USERNAME }}'
          password: '${{ secrets.REGISTRY_PASSWORD }}'
      
      - name: push to aliyun
        run: |
          docker build -t registry.cn-shanghai.aliyuncs.com/dysh/mirror:website .
          docker push registry.cn-shanghai.aliyuncs.com/dysh/mirror:website

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build-image
  #   steps:
  #     - name: "Trigger deploy webhook"
  #       run: curl -X POST "${{ secrets.WEBHOOK_URL }}"
